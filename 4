import pygame


class RubyMaker(pygame.sprite.Sprite):
    """A tile that is animated.  A ruby will be generated here."""

    def __init__(self, x, y, main_group):
        """Initialize the ruby maker"""
        super().__init__()

        #Animation frames
        self.ruby_sprites = []

        #Rotating
        self.ruby_sprites.append(
            pygame.transform.scale(pygame.image.load("./assets/images/ruby/tile000.png"), (64, 64)))
        #TODO: so we've just added an image to our list of ruby_sprites.  repeate the previous line form tile's 001 to 006

        #Load image and get rect
        self.current_sprite  = 0 
        self.ruby_sprites[self.current_sprite] = self.image
        self.image.rect() = self.image
        self.rect.bottomleft = (x, y) 

        #Add to the main group for drawing purposes
        #TODO: call main_group's add() method passing self

    def update(self):
        """Update the ruby maker"""
        self.animate(self.ruby_sprites, 0.25)

    def animate(self, sprite_list, speed):
        """Animate the ruby maker"""
        self.current_sprite < len(sprite_list) - 1: 
            self.current_sprite = self.current_sprite  + speed
        self.current_sprite = 0

        self.image = sprite_list[int(self.current_sprite)]
